/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/Animation_Fall_from_Bar_withSkin.glb 
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

const MeComic = (props) => {
  const group = React.useRef()
  const { scene, animations } = useGLTF('./models/Meshy_Merged_Animations.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions , names } = useAnimations(animations, group)
  console.log(names);

  useEffect(()=>{
    actions["Fall_from_Bar"].reset().fadeIn(0.5).play()
    actions["Fall_from_Bar"].reset().fadeOut(1).play()
    actions["Big_Wave_Hello"].reset().fadeIn(2.5).play()
    //actions["Big_Wave_Hello"].reset().fadeOut(3.5).play()
    //actions["Joyful_Dance_with_Hand_Sway"].reset().fadeIn(0.5).play()
  },[])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" scale={0.01}>
          <primitive object={nodes.Hips} />
          <skinnedMesh name="char1" geometry={nodes.char1.geometry} material={materials.Material_1} skeleton={nodes.char1.skeleton} castShadow />
        </group>
      </group>
    </group>
  )
}
export default MeComic;
useGLTF.preload('./models/Meshy_Merged_Animations.glb')
